/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 294.0, "minX": 0.0, "maxY": 144768.0, "series": [{"data": [[0.0, 294.0], [0.1, 343.0], [0.2, 348.0], [0.3, 352.0], [0.4, 363.0], [0.5, 381.0], [0.6, 399.0], [0.7, 414.0], [0.8, 426.0], [0.9, 439.0], [1.0, 445.0], [1.1, 472.0], [1.2, 482.0], [1.3, 492.0], [1.4, 503.0], [1.5, 523.0], [1.6, 547.0], [1.7, 565.0], [1.8, 574.0], [1.9, 583.0], [2.0, 588.0], [2.1, 596.0], [2.2, 619.0], [2.3, 634.0], [2.4, 654.0], [2.5, 678.0], [2.6, 702.0], [2.7, 749.0], [2.8, 778.0], [2.9, 800.0], [3.0, 833.0], [3.1, 861.0], [3.2, 881.0], [3.3, 913.0], [3.4, 962.0], [3.5, 979.0], [3.6, 1023.0], [3.7, 1054.0], [3.8, 1095.0], [3.9, 1136.0], [4.0, 1169.0], [4.1, 1213.0], [4.2, 1254.0], [4.3, 1297.0], [4.4, 1351.0], [4.5, 1398.0], [4.6, 1441.0], [4.7, 1469.0], [4.8, 1485.0], [4.9, 1516.0], [5.0, 1552.0], [5.1, 1588.0], [5.2, 1594.0], [5.3, 1616.0], [5.4, 1632.0], [5.5, 1668.0], [5.6, 1692.0], [5.7, 1696.0], [5.8, 1708.0], [5.9, 1721.0], [6.0, 1732.0], [6.1, 1749.0], [6.2, 1759.0], [6.3, 1766.0], [6.4, 1794.0], [6.5, 1807.0], [6.6, 1816.0], [6.7, 1868.0], [6.8, 1883.0], [6.9, 1904.0], [7.0, 1929.0], [7.1, 1944.0], [7.2, 1960.0], [7.3, 1996.0], [7.4, 2013.0], [7.5, 2036.0], [7.6, 2075.0], [7.7, 2089.0], [7.8, 2098.0], [7.9, 2111.0], [8.0, 2116.0], [8.1, 2122.0], [8.2, 2148.0], [8.3, 2158.0], [8.4, 2176.0], [8.5, 2182.0], [8.6, 2190.0], [8.7, 2196.0], [8.8, 2200.0], [8.9, 2208.0], [9.0, 2214.0], [9.1, 2231.0], [9.2, 2237.0], [9.3, 2247.0], [9.4, 2256.0], [9.5, 2264.0], [9.6, 2271.0], [9.7, 2285.0], [9.8, 2292.0], [9.9, 2297.0], [10.0, 2302.0], [10.1, 2312.0], [10.2, 2326.0], [10.3, 2328.0], [10.4, 2342.0], [10.5, 2353.0], [10.6, 2359.0], [10.7, 2367.0], [10.8, 2373.0], [10.9, 2380.0], [11.0, 2382.0], [11.1, 2396.0], [11.2, 2402.0], [11.3, 2411.0], [11.4, 2416.0], [11.5, 2429.0], [11.6, 2438.0], [11.7, 2448.0], [11.8, 2454.0], [11.9, 2461.0], [12.0, 2466.0], [12.1, 2485.0], [12.2, 2499.0], [12.3, 2510.0], [12.4, 2544.0], [12.5, 2557.0], [12.6, 2570.0], [12.7, 2583.0], [12.8, 2600.0], [12.9, 2608.0], [13.0, 2615.0], [13.1, 2635.0], [13.2, 2651.0], [13.3, 2668.0], [13.4, 2676.0], [13.5, 2690.0], [13.6, 2700.0], [13.7, 2720.0], [13.8, 2729.0], [13.9, 2739.0], [14.0, 2757.0], [14.1, 2766.0], [14.2, 2772.0], [14.3, 2793.0], [14.4, 2813.0], [14.5, 2826.0], [14.6, 2842.0], [14.7, 2869.0], [14.8, 2883.0], [14.9, 2898.0], [15.0, 2933.0], [15.1, 2963.0], [15.2, 2981.0], [15.3, 2996.0], [15.4, 3008.0], [15.5, 3017.0], [15.6, 3035.0], [15.7, 3046.0], [15.8, 3054.0], [15.9, 3070.0], [16.0, 3073.0], [16.1, 3083.0], [16.2, 3089.0], [16.3, 3094.0], [16.4, 3103.0], [16.5, 3110.0], [16.6, 3119.0], [16.7, 3130.0], [16.8, 3134.0], [16.9, 3140.0], [17.0, 3151.0], [17.1, 3158.0], [17.2, 3164.0], [17.3, 3171.0], [17.4, 3180.0], [17.5, 3189.0], [17.6, 3204.0], [17.7, 3227.0], [17.8, 3238.0], [17.9, 3245.0], [18.0, 3256.0], [18.1, 3265.0], [18.2, 3272.0], [18.3, 3277.0], [18.4, 3283.0], [18.5, 3287.0], [18.6, 3291.0], [18.7, 3298.0], [18.8, 3304.0], [18.9, 3311.0], [19.0, 3319.0], [19.1, 3323.0], [19.2, 3328.0], [19.3, 3332.0], [19.4, 3336.0], [19.5, 3343.0], [19.6, 3347.0], [19.7, 3358.0], [19.8, 3362.0], [19.9, 3364.0], [20.0, 3369.0], [20.1, 3377.0], [20.2, 3384.0], [20.3, 3391.0], [20.4, 3396.0], [20.5, 3409.0], [20.6, 3420.0], [20.7, 3426.0], [20.8, 3431.0], [20.9, 3442.0], [21.0, 3450.0], [21.1, 3456.0], [21.2, 3465.0], [21.3, 3471.0], [21.4, 3485.0], [21.5, 3493.0], [21.6, 3502.0], [21.7, 3506.0], [21.8, 3519.0], [21.9, 3526.0], [22.0, 3537.0], [22.1, 3546.0], [22.2, 3558.0], [22.3, 3572.0], [22.4, 3578.0], [22.5, 3582.0], [22.6, 3595.0], [22.7, 3604.0], [22.8, 3616.0], [22.9, 3639.0], [23.0, 3654.0], [23.1, 3673.0], [23.2, 3697.0], [23.3, 3713.0], [23.4, 3741.0], [23.5, 3774.0], [23.6, 3787.0], [23.7, 3806.0], [23.8, 3833.0], [23.9, 3854.0], [24.0, 3864.0], [24.1, 3894.0], [24.2, 3907.0], [24.3, 3946.0], [24.4, 3981.0], [24.5, 4030.0], [24.6, 4052.0], [24.7, 4085.0], [24.8, 4101.0], [24.9, 4135.0], [25.0, 4173.0], [25.1, 4186.0], [25.2, 4198.0], [25.3, 4234.0], [25.4, 4249.0], [25.5, 4268.0], [25.6, 4286.0], [25.7, 4307.0], [25.8, 4322.0], [25.9, 4337.0], [26.0, 4360.0], [26.1, 4383.0], [26.2, 4402.0], [26.3, 4412.0], [26.4, 4431.0], [26.5, 4438.0], [26.6, 4467.0], [26.7, 4486.0], [26.8, 4490.0], [26.9, 4507.0], [27.0, 4522.0], [27.1, 4529.0], [27.2, 4538.0], [27.3, 4553.0], [27.4, 4560.0], [27.5, 4570.0], [27.6, 4582.0], [27.7, 4593.0], [27.8, 4602.0], [27.9, 4612.0], [28.0, 4618.0], [28.1, 4632.0], [28.2, 4642.0], [28.3, 4652.0], [28.4, 4662.0], [28.5, 4678.0], [28.6, 4685.0], [28.7, 4691.0], [28.8, 4701.0], [28.9, 4713.0], [29.0, 4716.0], [29.1, 4727.0], [29.2, 4742.0], [29.3, 4752.0], [29.4, 4769.0], [29.5, 4779.0], [29.6, 4796.0], [29.7, 4810.0], [29.8, 4830.0], [29.9, 4834.0], [30.0, 4844.0], [30.1, 4851.0], [30.2, 4860.0], [30.3, 4883.0], [30.4, 4905.0], [30.5, 4923.0], [30.6, 4944.0], [30.7, 4951.0], [30.8, 4958.0], [30.9, 4968.0], [31.0, 4994.0], [31.1, 5028.0], [31.2, 5045.0], [31.3, 5064.0], [31.4, 5072.0], [31.5, 5088.0], [31.6, 5098.0], [31.7, 5105.0], [31.8, 5120.0], [31.9, 5147.0], [32.0, 5164.0], [32.1, 5180.0], [32.2, 5202.0], [32.3, 5212.0], [32.4, 5227.0], [32.5, 5235.0], [32.6, 5254.0], [32.7, 5284.0], [32.8, 5320.0], [32.9, 5332.0], [33.0, 5357.0], [33.1, 5373.0], [33.2, 5394.0], [33.3, 5409.0], [33.4, 5428.0], [33.5, 5451.0], [33.6, 5472.0], [33.7, 5500.0], [33.8, 5513.0], [33.9, 5550.0], [34.0, 5574.0], [34.1, 5609.0], [34.2, 5628.0], [34.3, 5668.0], [34.4, 5677.0], [34.5, 5695.0], [34.6, 5716.0], [34.7, 5725.0], [34.8, 5749.0], [34.9, 5765.0], [35.0, 5783.0], [35.1, 5815.0], [35.2, 5877.0], [35.3, 5899.0], [35.4, 5920.0], [35.5, 5951.0], [35.6, 5972.0], [35.7, 5984.0], [35.8, 5992.0], [35.9, 6011.0], [36.0, 6034.0], [36.1, 6064.0], [36.2, 6083.0], [36.3, 6112.0], [36.4, 6160.0], [36.5, 6178.0], [36.6, 6185.0], [36.7, 6242.0], [36.8, 6265.0], [36.9, 6285.0], [37.0, 6303.0], [37.1, 6311.0], [37.2, 6325.0], [37.3, 6350.0], [37.4, 6366.0], [37.5, 6386.0], [37.6, 6397.0], [37.7, 6408.0], [37.8, 6423.0], [37.9, 6446.0], [38.0, 6463.0], [38.1, 6479.0], [38.2, 6505.0], [38.3, 6522.0], [38.4, 6540.0], [38.5, 6572.0], [38.6, 6584.0], [38.7, 6599.0], [38.8, 6622.0], [38.9, 6636.0], [39.0, 6650.0], [39.1, 6663.0], [39.2, 6678.0], [39.3, 6700.0], [39.4, 6711.0], [39.5, 6750.0], [39.6, 6759.0], [39.7, 6783.0], [39.8, 6825.0], [39.9, 6851.0], [40.0, 6861.0], [40.1, 6901.0], [40.2, 6915.0], [40.3, 6937.0], [40.4, 6961.0], [40.5, 7000.0], [40.6, 7019.0], [40.7, 7037.0], [40.8, 7057.0], [40.9, 7124.0], [41.0, 7146.0], [41.1, 7159.0], [41.2, 7166.0], [41.3, 7177.0], [41.4, 7193.0], [41.5, 7208.0], [41.6, 7234.0], [41.7, 7260.0], [41.8, 7286.0], [41.9, 7322.0], [42.0, 7363.0], [42.1, 7381.0], [42.2, 7417.0], [42.3, 7437.0], [42.4, 7459.0], [42.5, 7475.0], [42.6, 7492.0], [42.7, 7497.0], [42.8, 7505.0], [42.9, 7523.0], [43.0, 7554.0], [43.1, 7568.0], [43.2, 7597.0], [43.3, 7625.0], [43.4, 7649.0], [43.5, 7659.0], [43.6, 7681.0], [43.7, 7700.0], [43.8, 7710.0], [43.9, 7717.0], [44.0, 7743.0], [44.1, 7756.0], [44.2, 7777.0], [44.3, 7826.0], [44.4, 7853.0], [44.5, 7863.0], [44.6, 7889.0], [44.7, 7909.0], [44.8, 7952.0], [44.9, 7965.0], [45.0, 7977.0], [45.1, 7989.0], [45.2, 8002.0], [45.3, 8014.0], [45.4, 8030.0], [45.5, 8042.0], [45.6, 8050.0], [45.7, 8069.0], [45.8, 8079.0], [45.9, 8114.0], [46.0, 8135.0], [46.1, 8155.0], [46.2, 8169.0], [46.3, 8182.0], [46.4, 8202.0], [46.5, 8214.0], [46.6, 8232.0], [46.7, 8256.0], [46.8, 8268.0], [46.9, 8292.0], [47.0, 8332.0], [47.1, 8373.0], [47.2, 8384.0], [47.3, 8393.0], [47.4, 8425.0], [47.5, 8443.0], [47.6, 8462.0], [47.7, 8480.0], [47.8, 8509.0], [47.9, 8529.0], [48.0, 8558.0], [48.1, 8565.0], [48.2, 8593.0], [48.3, 8603.0], [48.4, 8627.0], [48.5, 8651.0], [48.6, 8667.0], [48.7, 8676.0], [48.8, 8701.0], [48.9, 8715.0], [49.0, 8730.0], [49.1, 8767.0], [49.2, 8781.0], [49.3, 8797.0], [49.4, 8809.0], [49.5, 8830.0], [49.6, 8836.0], [49.7, 8856.0], [49.8, 8873.0], [49.9, 8885.0], [50.0, 8912.0], [50.1, 8967.0], [50.2, 8981.0], [50.3, 9007.0], [50.4, 9032.0], [50.5, 9061.0], [50.6, 9075.0], [50.7, 9099.0], [50.8, 9111.0], [50.9, 9126.0], [51.0, 9143.0], [51.1, 9169.0], [51.2, 9179.0], [51.3, 9202.0], [51.4, 9231.0], [51.5, 9258.0], [51.6, 9299.0], [51.7, 9315.0], [51.8, 9344.0], [51.9, 9364.0], [52.0, 9370.0], [52.1, 9389.0], [52.2, 9411.0], [52.3, 9460.0], [52.4, 9481.0], [52.5, 9521.0], [52.6, 9530.0], [52.7, 9543.0], [52.8, 9575.0], [52.9, 9612.0], [53.0, 9626.0], [53.1, 9664.0], [53.2, 9682.0], [53.3, 9723.0], [53.4, 9737.0], [53.5, 9757.0], [53.6, 9792.0], [53.7, 9826.0], [53.8, 9842.0], [53.9, 9865.0], [54.0, 9909.0], [54.1, 9933.0], [54.2, 9980.0], [54.3, 10008.0], [54.4, 10025.0], [54.5, 10033.0], [54.6, 10062.0], [54.7, 10086.0], [54.8, 10105.0], [54.9, 10151.0], [55.0, 10186.0], [55.1, 10204.0], [55.2, 10215.0], [55.3, 10234.0], [55.4, 10260.0], [55.5, 10291.0], [55.6, 10300.0], [55.7, 10312.0], [55.8, 10363.0], [55.9, 10388.0], [56.0, 10413.0], [56.1, 10441.0], [56.2, 10464.0], [56.3, 10488.0], [56.4, 10507.0], [56.5, 10527.0], [56.6, 10552.0], [56.7, 10585.0], [56.8, 10613.0], [56.9, 10626.0], [57.0, 10645.0], [57.1, 10659.0], [57.2, 10693.0], [57.3, 10730.0], [57.4, 10738.0], [57.5, 10748.0], [57.6, 10762.0], [57.7, 10797.0], [57.8, 10823.0], [57.9, 10835.0], [58.0, 10868.0], [58.1, 10878.0], [58.2, 10915.0], [58.3, 10930.0], [58.4, 10976.0], [58.5, 10990.0], [58.6, 11032.0], [58.7, 11073.0], [58.8, 11096.0], [58.9, 11146.0], [59.0, 11180.0], [59.1, 11239.0], [59.2, 11307.0], [59.3, 11368.0], [59.4, 11433.0], [59.5, 11483.0], [59.6, 11527.0], [59.7, 11571.0], [59.8, 11586.0], [59.9, 11628.0], [60.0, 11665.0], [60.1, 11700.0], [60.2, 11717.0], [60.3, 11733.0], [60.4, 11740.0], [60.5, 11755.0], [60.6, 11769.0], [60.7, 11795.0], [60.8, 11815.0], [60.9, 11836.0], [61.0, 11854.0], [61.1, 11869.0], [61.2, 11881.0], [61.3, 11897.0], [61.4, 11910.0], [61.5, 11915.0], [61.6, 11926.0], [61.7, 11938.0], [61.8, 11951.0], [61.9, 11964.0], [62.0, 11965.0], [62.1, 11977.0], [62.2, 11985.0], [62.3, 11998.0], [62.4, 12006.0], [62.5, 12016.0], [62.6, 12025.0], [62.7, 12029.0], [62.8, 12035.0], [62.9, 12050.0], [63.0, 12066.0], [63.1, 12080.0], [63.2, 12090.0], [63.3, 12108.0], [63.4, 12122.0], [63.5, 12153.0], [63.6, 12161.0], [63.7, 12168.0], [63.8, 12184.0], [63.9, 12205.0], [64.0, 12213.0], [64.1, 12221.0], [64.2, 12237.0], [64.3, 12246.0], [64.4, 12257.0], [64.5, 12267.0], [64.6, 12275.0], [64.7, 12282.0], [64.8, 12292.0], [64.9, 12298.0], [65.0, 12305.0], [65.1, 12314.0], [65.2, 12330.0], [65.3, 12338.0], [65.4, 12357.0], [65.5, 12366.0], [65.6, 12382.0], [65.7, 12393.0], [65.8, 12398.0], [65.9, 12411.0], [66.0, 12431.0], [66.1, 12442.0], [66.2, 12451.0], [66.3, 12461.0], [66.4, 12477.0], [66.5, 12489.0], [66.6, 12501.0], [66.7, 12513.0], [66.8, 12542.0], [66.9, 12570.0], [67.0, 12617.0], [67.1, 12648.0], [67.2, 12671.0], [67.3, 12734.0], [67.4, 12757.0], [67.5, 12769.0], [67.6, 12806.0], [67.7, 12842.0], [67.8, 12870.0], [67.9, 12884.0], [68.0, 12900.0], [68.1, 12917.0], [68.2, 12929.0], [68.3, 12950.0], [68.4, 12970.0], [68.5, 12986.0], [68.6, 13006.0], [68.7, 13019.0], [68.8, 13033.0], [68.9, 13048.0], [69.0, 13061.0], [69.1, 13071.0], [69.2, 13077.0], [69.3, 13107.0], [69.4, 13114.0], [69.5, 13129.0], [69.6, 13145.0], [69.7, 13158.0], [69.8, 13164.0], [69.9, 13179.0], [70.0, 13205.0], [70.1, 13217.0], [70.2, 13237.0], [70.3, 13261.0], [70.4, 13271.0], [70.5, 13282.0], [70.6, 13291.0], [70.7, 13306.0], [70.8, 13312.0], [70.9, 13327.0], [71.0, 13337.0], [71.1, 13351.0], [71.2, 13366.0], [71.3, 13378.0], [71.4, 13388.0], [71.5, 13401.0], [71.6, 13418.0], [71.7, 13436.0], [71.8, 13450.0], [71.9, 13461.0], [72.0, 13480.0], [72.1, 13522.0], [72.2, 13540.0], [72.3, 13548.0], [72.4, 13569.0], [72.5, 13588.0], [72.6, 13628.0], [72.7, 13648.0], [72.8, 13682.0], [72.9, 13722.0], [73.0, 13741.0], [73.1, 13764.0], [73.2, 13783.0], [73.3, 13793.0], [73.4, 13820.0], [73.5, 13845.0], [73.6, 13883.0], [73.7, 13929.0], [73.8, 13942.0], [73.9, 13959.0], [74.0, 14004.0], [74.1, 14032.0], [74.2, 14047.0], [74.3, 14086.0], [74.4, 14115.0], [74.5, 14172.0], [74.6, 14202.0], [74.7, 14240.0], [74.8, 14262.0], [74.9, 14281.0], [75.0, 14296.0], [75.1, 14341.0], [75.2, 14361.0], [75.3, 14393.0], [75.4, 14402.0], [75.5, 14421.0], [75.6, 14442.0], [75.7, 14466.0], [75.8, 14503.0], [75.9, 14540.0], [76.0, 14557.0], [76.1, 14583.0], [76.2, 14609.0], [76.3, 14632.0], [76.4, 14653.0], [76.5, 14677.0], [76.6, 14738.0], [76.7, 14792.0], [76.8, 14819.0], [76.9, 14842.0], [77.0, 14893.0], [77.1, 14905.0], [77.2, 14931.0], [77.3, 14988.0], [77.4, 15025.0], [77.5, 15056.0], [77.6, 15087.0], [77.7, 15098.0], [77.8, 15119.0], [77.9, 15179.0], [78.0, 15212.0], [78.1, 15253.0], [78.2, 15302.0], [78.3, 15324.0], [78.4, 15349.0], [78.5, 15364.0], [78.6, 15385.0], [78.7, 15411.0], [78.8, 15439.0], [78.9, 15465.0], [79.0, 15481.0], [79.1, 15523.0], [79.2, 15546.0], [79.3, 15589.0], [79.4, 15646.0], [79.5, 15688.0], [79.6, 15745.0], [79.7, 15802.0], [79.8, 15881.0], [79.9, 15926.0], [80.0, 15980.0], [80.1, 16020.0], [80.2, 16057.0], [80.3, 16084.0], [80.4, 16112.0], [80.5, 16145.0], [80.6, 16190.0], [80.7, 16223.0], [80.8, 16268.0], [80.9, 16300.0], [81.0, 16323.0], [81.1, 16420.0], [81.2, 16464.0], [81.3, 16500.0], [81.4, 16537.0], [81.5, 16588.0], [81.6, 16628.0], [81.7, 16672.0], [81.8, 16756.0], [81.9, 16808.0], [82.0, 16868.0], [82.1, 16906.0], [82.2, 16950.0], [82.3, 16979.0], [82.4, 17058.0], [82.5, 17121.0], [82.6, 17223.0], [82.7, 17254.0], [82.8, 17280.0], [82.9, 17319.0], [83.0, 17375.0], [83.1, 17395.0], [83.2, 17450.0], [83.3, 17489.0], [83.4, 17532.0], [83.5, 17553.0], [83.6, 17589.0], [83.7, 17617.0], [83.8, 17645.0], [83.9, 17668.0], [84.0, 17700.0], [84.1, 17717.0], [84.2, 17733.0], [84.3, 17779.0], [84.4, 17803.0], [84.5, 17823.0], [84.6, 17883.0], [84.7, 17918.0], [84.8, 17964.0], [84.9, 17996.0], [85.0, 18067.0], [85.1, 18183.0], [85.2, 18220.0], [85.3, 18265.0], [85.4, 18280.0], [85.5, 18303.0], [85.6, 18311.0], [85.7, 18334.0], [85.8, 18362.0], [85.9, 18383.0], [86.0, 18413.0], [86.1, 18440.0], [86.2, 18467.0], [86.3, 18523.0], [86.4, 18553.0], [86.5, 18609.0], [86.6, 18673.0], [86.7, 18751.0], [86.8, 18782.0], [86.9, 18824.0], [87.0, 18865.0], [87.1, 18904.0], [87.2, 18937.0], [87.3, 18964.0], [87.4, 19001.0], [87.5, 19024.0], [87.6, 19039.0], [87.7, 19064.0], [87.8, 19088.0], [87.9, 19121.0], [88.0, 19179.0], [88.1, 19221.0], [88.2, 19277.0], [88.3, 19327.0], [88.4, 19345.0], [88.5, 19424.0], [88.6, 19462.0], [88.7, 19517.0], [88.8, 19585.0], [88.9, 19703.0], [89.0, 19846.0], [89.1, 19868.0], [89.2, 19961.0], [89.3, 20008.0], [89.4, 20092.0], [89.5, 20129.0], [89.6, 20190.0], [89.7, 20289.0], [89.8, 20384.0], [89.9, 20489.0], [90.0, 20555.0], [90.1, 20585.0], [90.2, 20687.0], [90.3, 20753.0], [90.4, 20882.0], [90.5, 20948.0], [90.6, 21183.0], [90.7, 21306.0], [90.8, 21454.0], [90.9, 21557.0], [91.0, 21811.0], [91.1, 21943.0], [91.2, 22045.0], [91.3, 22174.0], [91.4, 22351.0], [91.5, 22482.0], [91.6, 22605.0], [91.7, 22715.0], [91.8, 22844.0], [91.9, 22999.0], [92.0, 23073.0], [92.1, 23261.0], [92.2, 23405.0], [92.3, 23534.0], [92.4, 23663.0], [92.5, 23925.0], [92.6, 23982.0], [92.7, 24303.0], [92.8, 24394.0], [92.9, 24587.0], [93.0, 24781.0], [93.1, 25023.0], [93.2, 25125.0], [93.3, 25191.0], [93.4, 25267.0], [93.5, 25315.0], [93.6, 25378.0], [93.7, 25563.0], [93.8, 25607.0], [93.9, 25815.0], [94.0, 25886.0], [94.1, 26070.0], [94.2, 26228.0], [94.3, 26318.0], [94.4, 26534.0], [94.5, 26727.0], [94.6, 26913.0], [94.7, 27143.0], [94.8, 27272.0], [94.9, 27394.0], [95.0, 27654.0], [95.1, 27796.0], [95.2, 28084.0], [95.3, 28215.0], [95.4, 28363.0], [95.5, 28548.0], [95.6, 28612.0], [95.7, 28858.0], [95.8, 29011.0], [95.9, 29136.0], [96.0, 29231.0], [96.1, 29282.0], [96.2, 29416.0], [96.3, 29713.0], [96.4, 29841.0], [96.5, 30035.0], [96.6, 30118.0], [96.7, 30204.0], [96.8, 30379.0], [96.9, 30459.0], [97.0, 30555.0], [97.1, 30719.0], [97.2, 30829.0], [97.3, 30901.0], [97.4, 30975.0], [97.5, 31424.0], [97.6, 31576.0], [97.7, 31685.0], [97.8, 32133.0], [97.9, 32233.0], [98.0, 32442.0], [98.1, 32625.0], [98.2, 32921.0], [98.3, 33318.0], [98.4, 33703.0], [98.5, 34475.0], [98.6, 35113.0], [98.7, 35921.0], [98.8, 38345.0], [98.9, 43716.0], [99.0, 48810.0], [99.1, 51518.0], [99.2, 52753.0], [99.3, 55201.0], [99.4, 136839.0], [99.5, 137340.0], [99.6, 137899.0], [99.7, 138492.0], [99.8, 138832.0], [99.9, 139554.0], [100.0, 144768.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 87.0, "series": [{"data": [[138400.0, 1.0], [139300.0, 1.0], [137000.0, 1.0], [32900.0, 2.0], [33700.0, 2.0], [137900.0, 1.0], [35300.0, 1.0], [48100.0, 1.0], [200.0, 2.0], [53700.0, 2.0], [55300.0, 1.0], [300.0, 29.0], [400.0, 39.0], [500.0, 40.0], [138800.0, 3.0], [142000.0, 1.0], [600.0, 22.0], [700.0, 16.0], [800.0, 19.0], [900.0, 16.0], [1000.0, 13.0], [1100.0, 13.0], [1200.0, 13.0], [1300.0, 9.0], [1400.0, 18.0], [1500.0, 18.0], [1600.0, 27.0], [1700.0, 37.0], [1800.0, 20.0], [1900.0, 25.0], [2000.0, 26.0], [2100.0, 48.0], [2300.0, 60.0], [2200.0, 61.0], [2400.0, 57.0], [2500.0, 28.0], [2600.0, 40.0], [2700.0, 39.0], [2800.0, 31.0], [2900.0, 22.0], [3000.0, 53.0], [3100.0, 62.0], [3300.0, 87.0], [3200.0, 58.0], [3400.0, 59.0], [3500.0, 55.0], [3700.0, 24.0], [3600.0, 30.0], [3800.0, 23.0], [3900.0, 18.0], [4000.0, 15.0], [4100.0, 22.0], [4300.0, 27.0], [4200.0, 22.0], [4400.0, 36.0], [4600.0, 54.0], [4500.0, 44.0], [4700.0, 45.0], [4800.0, 37.0], [5000.0, 33.0], [5100.0, 28.0], [4900.0, 32.0], [5300.0, 26.0], [5200.0, 27.0], [5500.0, 20.0], [5600.0, 23.0], [5400.0, 23.0], [5700.0, 27.0], [5800.0, 14.0], [6100.0, 19.0], [6000.0, 20.0], [5900.0, 29.0], [6300.0, 34.0], [6200.0, 18.0], [6400.0, 28.0], [6600.0, 28.0], [6500.0, 28.0], [6800.0, 18.0], [6900.0, 22.0], [6700.0, 22.0], [7100.0, 30.0], [7000.0, 19.0], [7300.0, 17.0], [7400.0, 28.0], [7200.0, 20.0], [7600.0, 23.0], [7500.0, 26.0], [7700.0, 30.0], [7800.0, 20.0], [7900.0, 28.0], [8000.0, 35.0], [8100.0, 24.0], [8200.0, 29.0], [8600.0, 28.0], [8400.0, 24.0], [9200.0, 18.0], [8800.0, 31.0], [9000.0, 21.0], [9600.0, 18.0], [9400.0, 19.0], [10000.0, 26.0], [10200.0, 26.0], [9800.0, 19.0], [10600.0, 26.0], [10400.0, 21.0], [11200.0, 9.0], [11000.0, 15.0], [10800.0, 22.0], [11600.0, 12.0], [11400.0, 8.0], [12000.0, 49.0], [12200.0, 53.0], [11800.0, 32.0], [12400.0, 37.0], [12600.0, 14.0], [13200.0, 34.0], [12800.0, 23.0], [13000.0, 35.0], [13800.0, 18.0], [13400.0, 29.0], [13600.0, 17.0], [14000.0, 20.0], [14200.0, 21.0], [14600.0, 21.0], [14800.0, 17.0], [14400.0, 22.0], [15000.0, 18.0], [15200.0, 14.0], [15400.0, 19.0], [15600.0, 9.0], [15800.0, 8.0], [16000.0, 17.0], [16200.0, 11.0], [16400.0, 10.0], [16800.0, 10.0], [17200.0, 14.0], [18000.0, 6.0], [17600.0, 19.0], [18400.0, 16.0], [18800.0, 13.0], [19200.0, 9.0], [20400.0, 5.0], [19600.0, 4.0], [20000.0, 10.0], [20800.0, 5.0], [21200.0, 4.0], [22400.0, 7.0], [21600.0, 3.0], [22000.0, 3.0], [23200.0, 5.0], [22800.0, 4.0], [23600.0, 4.0], [24000.0, 1.0], [24400.0, 2.0], [25200.0, 7.0], [24800.0, 1.0], [26400.0, 1.0], [26000.0, 2.0], [25600.0, 1.0], [27200.0, 4.0], [26800.0, 3.0], [27600.0, 3.0], [28000.0, 4.0], [28400.0, 1.0], [29200.0, 8.0], [29600.0, 2.0], [28800.0, 3.0], [30400.0, 5.0], [30000.0, 4.0], [30800.0, 6.0], [31600.0, 3.0], [31200.0, 1.0], [32400.0, 1.0], [32000.0, 2.0], [34400.0, 1.0], [33600.0, 1.0], [32800.0, 1.0], [138300.0, 1.0], [36800.0, 1.0], [144700.0, 1.0], [39200.0, 1.0], [48800.0, 1.0], [52000.0, 1.0], [51200.0, 1.0], [55200.0, 1.0], [137600.0, 1.0], [138500.0, 1.0], [33100.0, 1.0], [34700.0, 1.0], [33900.0, 1.0], [37100.0, 1.0], [44300.0, 1.0], [51500.0, 1.0], [54700.0, 1.0], [56300.0, 1.0], [138000.0, 1.0], [138900.0, 1.0], [17300.0, 14.0], [16500.0, 12.0], [16900.0, 12.0], [18100.0, 5.0], [17700.0, 20.0], [19300.0, 11.0], [18900.0, 16.0], [18500.0, 13.0], [20100.0, 9.0], [19700.0, 3.0], [20500.0, 10.0], [21300.0, 5.0], [20900.0, 5.0], [22500.0, 2.0], [22100.0, 5.0], [21700.0, 1.0], [22900.0, 4.0], [23300.0, 2.0], [24500.0, 3.0], [24100.0, 2.0], [23700.0, 2.0], [25300.0, 8.0], [24900.0, 1.0], [25700.0, 3.0], [26500.0, 4.0], [26100.0, 4.0], [26900.0, 3.0], [27300.0, 5.0], [27700.0, 3.0], [28500.0, 9.0], [28100.0, 2.0], [28900.0, 2.0], [29300.0, 1.0], [30500.0, 7.0], [30100.0, 7.0], [29700.0, 5.0], [30900.0, 6.0], [31300.0, 1.0], [32100.0, 3.0], [32500.0, 2.0], [33800.0, 1.0], [137500.0, 1.0], [52200.0, 1.0], [61000.0, 1.0], [136800.0, 3.0], [140000.0, 1.0], [137700.0, 1.0], [138600.0, 1.0], [33300.0, 2.0], [35700.0, 1.0], [34900.0, 1.0], [139500.0, 2.0], [40500.0, 1.0], [43700.0, 1.0], [52500.0, 1.0], [54900.0, 1.0], [138100.0, 1.0], [8700.0, 28.0], [8500.0, 24.0], [8300.0, 21.0], [8900.0, 18.0], [9100.0, 29.0], [9300.0, 26.0], [9500.0, 20.0], [9700.0, 20.0], [9900.0, 14.0], [10100.0, 16.0], [10700.0, 24.0], [10300.0, 19.0], [10500.0, 19.0], [11100.0, 10.0], [10900.0, 20.0], [11500.0, 18.0], [11700.0, 32.0], [11300.0, 8.0], [12100.0, 32.0], [11900.0, 50.0], [12300.0, 46.0], [12500.0, 22.0], [12700.0, 15.0], [12900.0, 31.0], [13300.0, 43.0], [13100.0, 37.0], [13700.0, 22.0], [13500.0, 25.0], [13900.0, 15.0], [14300.0, 19.0], [14100.0, 13.0], [14500.0, 19.0], [14700.0, 8.0], [14900.0, 15.0], [15100.0, 11.0], [15300.0, 24.0], [15500.0, 16.0], [15700.0, 9.0], [15900.0, 10.0], [16100.0, 15.0], [16300.0, 11.0], [17400.0, 11.0], [17000.0, 7.0], [16600.0, 10.0], [18200.0, 18.0], [17800.0, 14.0], [19400.0, 13.0], [19000.0, 21.0], [18600.0, 6.0], [19800.0, 9.0], [20200.0, 5.0], [21400.0, 2.0], [20600.0, 8.0], [21800.0, 6.0], [22200.0, 3.0], [23000.0, 5.0], [22600.0, 6.0], [23400.0, 2.0], [23800.0, 2.0], [24200.0, 1.0], [25000.0, 5.0], [24600.0, 1.0], [25400.0, 2.0], [25800.0, 8.0], [26200.0, 5.0], [27400.0, 3.0], [27000.0, 4.0], [28200.0, 5.0], [27800.0, 2.0], [28600.0, 3.0], [29400.0, 7.0], [29000.0, 3.0], [30200.0, 4.0], [29800.0, 2.0], [30600.0, 1.0], [31000.0, 2.0], [31400.0, 2.0], [32600.0, 3.0], [32200.0, 5.0], [31800.0, 2.0], [33200.0, 2.0], [34800.0, 2.0], [34000.0, 1.0], [36400.0, 1.0], [38800.0, 2.0], [47600.0, 1.0], [50000.0, 1.0], [52400.0, 1.0], [136900.0, 1.0], [137800.0, 2.0], [33500.0, 1.0], [138700.0, 1.0], [35100.0, 1.0], [35900.0, 1.0], [141900.0, 1.0], [37500.0, 1.0], [38300.0, 1.0], [48700.0, 1.0], [51100.0, 1.0], [49500.0, 1.0], [52700.0, 1.0], [53500.0, 1.0], [139600.0, 1.0], [137300.0, 1.0], [16700.0, 8.0], [17100.0, 6.0], [17900.0, 14.0], [17500.0, 15.0], [18300.0, 23.0], [18700.0, 11.0], [19100.0, 13.0], [19900.0, 6.0], [20300.0, 5.0], [19500.0, 6.0], [21100.0, 4.0], [21500.0, 4.0], [20700.0, 4.0], [21900.0, 4.0], [22300.0, 1.0], [22700.0, 3.0], [23500.0, 6.0], [23100.0, 2.0], [24300.0, 7.0], [23900.0, 6.0], [25100.0, 8.0], [24700.0, 4.0], [25500.0, 7.0], [26300.0, 4.0], [25900.0, 3.0], [26700.0, 2.0], [27100.0, 2.0], [27500.0, 1.0], [28300.0, 2.0], [29100.0, 5.0], [28700.0, 2.0], [30700.0, 5.0], [30300.0, 3.0], [29900.0, 2.0], [31500.0, 6.0], [31900.0, 1.0], [32300.0, 2.0], [32700.0, 2.0], [33400.0, 2.0], [34200.0, 1.0], [35800.0, 2.0], [57400.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 144700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 70.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3988.0, "series": [{"data": [[0.0, 70.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 179.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3988.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 895.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 16.0, "minX": 1.60319196E12, "maxY": 1146.0378226936168, "series": [{"data": [[1.60319196E12, 88.70930232558139], [1.60319214E12, 16.0], [1.60319208E12, 40.5], [1.60319202E12, 1146.0378226936168]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60319214E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 439.0, "minX": 1.0, "maxY": 144768.0, "series": [{"data": [[2.0, 137701.0], [3.0, 137041.0], [4.0, 139634.0], [5.0, 142078.0], [6.0, 138695.0], [7.0, 136906.0], [8.0, 141909.0], [9.0, 138492.0], [10.0, 137340.0], [11.0, 137876.0], [12.0, 136888.0], [13.0, 139554.0], [14.0, 137899.0], [15.0, 138959.0], [16.0, 138068.0], [17.0, 137564.0], [18.0, 137637.0], [19.0, 138189.0], [20.0, 139531.0], [21.0, 137901.0], [22.0, 138508.0], [23.0, 138857.0], [24.0, 138832.0], [25.0, 138319.0], [26.0, 136863.0], [27.0, 136839.0], [28.0, 140045.0], [29.0, 144768.0], [30.0, 138729.0], [31.0, 139375.0], [33.0, 53511.0], [32.0, 52753.0], [35.0, 55399.0], [34.0, 61045.0], [37.0, 53764.0], [36.0, 56339.0], [39.0, 57419.0], [38.0, 55201.0], [41.0, 54991.0], [40.0, 52549.0], [43.0, 49597.0], [42.0, 54720.0], [45.0, 25782.5], [44.0, 53766.0], [47.0, 52086.0], [46.0, 51518.0], [49.0, 24600.5], [48.0, 51158.0], [50.0, 25240.0], [51.0, 52244.0], [52.0, 26434.5], [53.0, 24579.5], [55.0, 35894.0], [54.0, 43716.0], [56.0, 24039.5], [57.0, 29783.0], [59.0, 14684.0], [58.0, 35845.0], [60.0, 8627.5], [61.0, 8497.5], [62.0, 9924.2], [63.0, 7712.5], [64.0, 13199.333333333334], [66.0, 6697.857142857143], [67.0, 14224.5], [65.0, 34875.0], [68.0, 9794.333333333334], [70.0, 6337.2], [71.0, 13181.0], [69.0, 29415.0], [72.0, 9661.333333333334], [75.0, 30609.0], [74.0, 27479.0], [73.0, 27877.0], [76.0, 12900.5], [78.0, 11486.333333333334], [79.0, 16530.0], [77.0, 22588.0], [80.0, 12375.5], [81.0, 16102.5], [83.0, 32013.0], [82.0, 28942.0], [85.0, 13376.5], [87.0, 11206.666666666666], [86.0, 29841.0], [84.0, 26271.0], [91.0, 12014.0], [90.0, 40554.0], [89.0, 26255.0], [88.0, 28270.0], [94.0, 15972.5], [95.0, 15361.0], [93.0, 29790.0], [92.0, 38345.0], [99.0, 6541.0], [98.0, 24487.0], [97.0, 29097.0], [96.0, 27379.0], [100.0, 14098.5], [101.0, 13919.0], [102.0, 5696.428571428571], [103.0, 28877.0], [104.0, 12931.666666666666], [107.0, 30901.0], [106.0, 28612.0], [105.0, 29713.0], [108.0, 16917.5], [109.0, 15739.0], [111.0, 27113.0], [113.0, 20092.0], [115.0, 19697.0], [114.0, 30494.0], [116.0, 7047.8], [118.0, 15243.5], [119.0, 735.5], [117.0, 39238.0], [120.0, 20586.666666666668], [122.0, 10755.0], [123.0, 10139.666666666666], [121.0, 29778.0], [124.0, 4615.5], [127.0, 38830.0], [126.0, 20632.0], [125.0, 35921.0], [130.0, 5009.0], [133.0, 15892.0], [134.0, 18667.5], [135.0, 15865.0], [132.0, 19532.0], [131.0, 30188.0], [129.0, 26340.0], [128.0, 32506.0], [136.0, 439.0], [138.0, 11994.5], [139.0, 7687.5], [140.0, 14269.5], [141.0, 12270.666666666666], [142.0, 8490.25], [143.0, 4526.0], [137.0, 26687.0], [145.0, 8247.25], [147.0, 6809.75], [150.0, 17438.0], [151.0, 26875.0], [149.0, 35113.0], [148.0, 32625.0], [146.0, 28858.0], [144.0, 37162.0], [152.0, 15273.5], [153.0, 8215.0], [154.0, 13659.0], [155.0, 7999.333333333333], [156.0, 10515.5], [157.0, 11653.5], [158.0, 5501.5], [159.0, 30243.0], [160.0, 15779.5], [161.0, 17055.5], [162.0, 4323.571428571428], [167.0, 32219.0], [166.0, 25746.0], [165.0, 28528.0], [164.0, 23180.5], [172.0, 14625.0], [174.0, 10009.5], [175.0, 28539.0], [173.0, 18136.0], [171.0, 18183.0], [170.0, 14899.0], [169.0, 33318.0], [168.0, 29365.0], [176.0, 9420.5], [177.0, 14123.5], [181.0, 893.5], [183.0, 21600.0], [180.0, 30591.0], [179.0, 19160.0], [178.0, 19434.0], [184.0, 7367.5], [185.0, 6932.0], [186.0, 7219.0], [190.0, 12083.0], [191.0, 21813.0], [189.0, 17701.0], [188.0, 23822.0], [187.0, 28144.0], [192.0, 12992.5], [194.0, 11861.0], [198.0, 10137.666666666666], [199.0, 8879.0], [197.0, 28865.0], [195.0, 17816.0], [202.0, 9390.0], [203.0, 10123.0], [205.0, 2173.0], [206.0, 5917.285714285714], [207.0, 9881.0], [204.0, 17700.0], [201.0, 17671.0], [200.0, 17698.0], [208.0, 17515.5], [209.0, 8589.666666666668], [210.0, 9204.0], [211.0, 9014.0], [213.0, 833.0], [214.0, 13481.25], [215.0, 5218.0], [216.0, 11579.0], [217.0, 445.0], [218.0, 12316.333333333334], [221.0, 13895.0], [222.0, 5761.0], [223.0, 9457.5], [220.0, 13320.0], [219.0, 17720.0], [224.0, 11326.333333333334], [225.0, 11787.333333333334], [228.0, 5310.75], [229.0, 9925.666666666668], [230.0, 942.6666666666666], [231.0, 10572.5], [227.0, 17883.0], [226.0, 29471.0], [232.0, 3153.75], [233.0, 16221.0], [234.0, 8948.5], [235.0, 4610.333333333334], [238.0, 12357.5], [239.0, 9824.666666666666], [237.0, 14728.0], [236.0, 21557.0], [242.0, 15054.0], [243.0, 6593.0], [245.0, 6576.75], [247.0, 15687.5], [246.0, 14778.0], [244.0, 23932.0], [240.0, 9726.0], [248.0, 746.5], [249.0, 8942.4], [255.0, 25347.0], [254.0, 7989.0], [253.0, 34727.0], [252.0, 18311.0], [251.0, 25774.0], [250.0, 23268.0], [257.0, 10097.5], [256.0, 7426.0], [258.0, 5515.333333333334], [259.0, 12971.5], [260.0, 9450.25], [261.0, 13169.5], [262.0, 4822.666666666666], [263.0, 8666.25], [265.0, 1449.5], [271.0, 7975.4], [264.0, 16602.0], [268.0, 5357.5], [269.0, 12910.0], [270.0, 2306.0], [266.0, 11274.666666666666], [267.0, 6828.0], [273.0, 10651.0], [275.0, 9909.0], [274.0, 15350.0], [276.0, 3767.3333333333335], [277.0, 14386.5], [278.0, 7550.75], [279.0, 4236.2], [280.0, 14154.0], [282.0, 7685.0], [281.0, 11081.0], [283.0, 14312.0], [284.0, 16541.5], [285.0, 9496.5], [286.0, 12951.333333333334], [287.0, 26913.0], [302.0, 11952.666666666666], [288.0, 3683.0], [292.0, 16684.333333333332], [293.0, 23681.0], [295.0, 23210.0], [294.0, 32210.0], [296.0, 5281.333333333334], [299.0, 1533.0], [301.0, 10321.0], [303.0, 873.5], [300.0, 23566.0], [290.0, 24770.0], [289.0, 24792.0], [298.0, 19344.0], [297.0, 17454.0], [317.0, 12652.5], [304.0, 913.0], [305.0, 8809.75], [316.0, 18379.0], [306.0, 17668.0], [310.0, 11091.0], [309.0, 18276.0], [308.0, 18301.5], [311.0, 11007.5], [312.0, 6737.5], [313.0, 13480.0], [314.0, 4846.2], [315.0, 12737.0], [318.0, 2370.0], [319.0, 1461.0], [322.0, 18733.0], [324.0, 9264.666666666668], [325.0, 7320.0], [327.0, 9711.5], [321.0, 18265.0], [320.0, 18061.0], [328.0, 2513.0], [332.0, 5951.0], [323.0, 30856.0], [334.0, 6329.5], [335.0, 27147.0], [331.0, 15243.0], [330.0, 34475.0], [329.0, 25567.0], [338.0, 1614.0], [337.0, 9783.333333333334], [336.0, 11394.0], [339.0, 21939.333333333332], [340.0, 1257.5], [341.0, 8395.833333333332], [343.0, 8485.0], [342.0, 24587.0], [344.0, 4062.25], [347.0, 3208.0], [346.0, 11008.5], [348.0, 10661.666666666666], [349.0, 2045.0], [350.0, 1584.0], [351.0, 10292.8], [352.0, 1407.0], [355.0, 5883.2], [354.0, 28654.0], [353.0, 13766.0], [365.0, 20489.0], [364.0, 25302.0], [367.0, 9755.0], [366.0, 18904.0], [356.0, 8219.5], [357.0, 5858.75], [358.0, 7841.0], [359.0, 10676.666666666668], [361.0, 13404.0], [362.0, 11173.5], [363.0, 10292.0], [368.0, 1591.0], [371.0, 9564.0], [370.0, 12890.0], [369.0, 14215.0], [380.0, 22835.0], [381.0, 6994.5], [383.0, 1673.5], [382.0, 17037.0], [372.0, 12268.0], [373.0, 4743.0], [374.0, 9207.0], [375.0, 8163.0], [376.0, 5357.333333333334], [377.0, 9813.5], [378.0, 7577.5], [379.0, 7582.5], [396.0, 12052.0], [384.0, 9424.666666666666], [386.0, 2492.5], [385.0, 15920.0], [387.0, 14762.5], [388.0, 7736.333333333333], [389.0, 28596.0], [390.0, 4400.0], [391.0, 10012.333333333334], [392.0, 1746.75], [394.0, 13671.0], [393.0, 17031.0], [399.0, 8766.0], [397.0, 1811.0], [398.0, 1799.6666666666667], [401.0, 9408.0], [400.0, 3487.0], [403.0, 10550.5], [402.0, 30110.0], [412.0, 11787.0], [414.0, 4633.0], [413.0, 19167.0], [415.0, 7239.5], [405.0, 9384.0], [404.0, 6703.0], [406.0, 9147.0], [407.0, 2467.5], [408.0, 8723.666666666668], [409.0, 9757.333333333332], [411.0, 9745.666666666668], [410.0, 17892.0], [417.0, 1759.0], [416.0, 5829.2], [419.0, 7753.0], [418.0, 19457.5], [428.0, 1969.3333333333335], [429.0, 14560.0], [431.0, 7578.666666666667], [430.0, 20429.333333333332], [420.0, 10377.5], [421.0, 7074.2], [423.0, 4642.75], [422.0, 26180.0], [424.0, 9943.5], [425.0, 10121.666666666668], [426.0, 10175.0], [432.0, 2554.0], [433.0, 17043.0], [435.0, 25335.0], [434.0, 25059.0], [436.0, 16478.0], [437.0, 9616.333333333332], [438.0, 8476.333333333332], [439.0, 3491.4], [443.0, 11629.0], [442.0, 30038.0], [441.0, 16724.0], [445.0, 8557.333333333334], [446.0, 16534.5], [447.0, 6894.0], [448.0, 6711.25], [451.0, 5265.4], [450.0, 7965.0], [449.0, 22045.0], [461.0, 8081.0], [452.0, 15943.5], [453.0, 3494.0], [454.0, 8323.6], [455.0, 9412.0], [456.0, 1929.0], [458.0, 6695.571428571428], [459.0, 18283.0], [462.0, 6621.333333333333], [463.0, 7592.0], [476.0, 6017.0], [465.0, 5318.25], [467.0, 10374.5], [466.0, 25223.0], [468.0, 7312.8], [469.0, 13549.0], [470.0, 6346.0], [464.0, 16197.0], [473.0, 16423.25], [475.0, 26157.0], [474.0, 25180.0], [479.0, 9937.0], [477.0, 5749.0], [478.0, 5757.5], [493.0, 17570.0], [482.0, 5414.0], [481.0, 13596.0], [487.0, 31563.0], [480.0, 16145.0], [483.0, 4985.666666666667], [492.0, 19440.0], [484.0, 11548.0], [485.0, 31591.0], [486.0, 17283.5], [488.0, 12861.0], [490.0, 7224.5], [489.0, 25576.0], [491.0, 6964.0], [495.0, 19281.0], [494.0, 21981.0], [508.0, 6238.333333333334], [496.0, 12119.0], [497.0, 8731.666666666668], [499.0, 20582.0], [500.0, 6566.666666666667], [501.0, 33147.0], [502.0, 11370.5], [503.0, 9229.5], [505.0, 7563.25], [506.0, 7134.333333333333], [507.0, 6006.333333333334], [510.0, 2266.5], [509.0, 17538.0], [511.0, 7077.75], [518.0, 5311.0], [512.0, 6141.0], [526.0, 12249.333333333334], [514.0, 10190.0], [516.0, 20888.0], [542.0, 8444.333333333332], [538.0, 8105.0], [536.0, 13829.0], [540.0, 22472.0], [534.0, 3194.0], [532.0, 10826.0], [530.0, 15356.0], [528.0, 23770.0], [520.0, 5713.25], [522.0, 29873.0], [524.0, 7412.0], [548.0, 10113.25], [544.0, 3261.5], [556.0, 20480.0], [558.0, 12239.0], [546.0, 8600.333333333332], [568.0, 2317.0], [550.0, 23982.0], [570.0, 21523.0], [574.0, 8316.0], [562.0, 18467.0], [560.0, 20155.0], [572.0, 9495.0], [564.0, 4265.25], [566.0, 8652.0], [552.0, 6099.4], [554.0, 21387.0], [582.0, 6262.571428571428], [576.0, 11653.5], [590.0, 5997.0], [588.0, 20008.5], [578.0, 15499.0], [580.0, 16648.5], [592.0, 4762.333333333333], [606.0, 16699.5], [604.0, 4946.285714285714], [602.0, 7934.666666666667], [600.0, 18929.0], [594.0, 6400.0], [596.0, 7297.666666666667], [598.0, 9742.333333333332], [584.0, 11500.25], [586.0, 11348.333333333334], [634.0, 9959.666666666668], [614.0, 4440.0], [632.0, 8856.5], [622.0, 6113.666666666666], [608.0, 15638.0], [612.0, 22242.0], [610.0, 24696.0], [618.0, 25607.0], [616.0, 18880.0], [626.0, 3596.4], [630.0, 8246.0], [628.0, 10738.0], [636.0, 6581.25], [638.0, 22174.0], [644.0, 3928.0], [652.0, 12128.5], [666.0, 12085.0], [668.0, 4508.0], [648.0, 4406.0], [656.0, 7799.0], [662.0, 29683.0], [658.0, 7009.5], [654.0, 5673.0], [642.0, 8876.0], [640.0, 6126.0], [698.0, 14643.0], [672.0, 11958.8], [676.0, 7337.166666666667], [674.0, 20146.0], [696.0, 13734.0], [700.0, 11618.0], [680.0, 9582.0], [682.0, 14338.5], [686.0, 19528.5], [684.0, 13776.0], [688.0, 3869.5], [690.0, 7255.333333333333], [692.0, 7403.333333333333], [694.0, 6904.285714285715], [710.0, 8279.0], [704.0, 2720.0], [706.0, 12263.0], [708.0, 10571.0], [720.0, 13399.0], [722.0, 28077.0], [726.0, 20585.0], [724.0, 15760.0], [734.0, 12367.6], [732.0, 9015.0], [730.0, 9925.2], [728.0, 20566.0], [712.0, 4776.777777777777], [714.0, 20087.5], [716.0, 9842.5], [718.0, 15637.0], [764.0, 9249.5], [738.0, 8364.0], [736.0, 5055.285714285715], [740.0, 6204.428571428571], [760.0, 32139.0], [742.0, 9135.0], [750.0, 12001.5], [748.0, 16868.0], [744.0, 27688.0], [754.0, 3456.285714285714], [752.0, 4567.0], [756.0, 10258.0], [758.0, 3177.0], [792.0, 16281.0], [772.0, 5861.166666666667], [770.0, 7810.666666666666], [774.0, 6937.5], [784.0, 4906.6], [798.0, 7800.125], [794.0, 10993.0], [796.0, 21205.0], [786.0, 6865.666666666666], [790.0, 23657.5], [788.0, 12084.0], [776.0, 7323.5], [778.0, 10748.0], [780.0, 5718.25], [804.0, 8379.333333333332], [800.0, 9849.0], [814.0, 7345.666666666667], [802.0, 5430.8], [806.0, 7434.666666666667], [824.0, 14842.0], [828.0, 16000.0], [826.0, 11810.0], [830.0, 5957.5], [818.0, 9552.0], [816.0, 6463.0], [822.0, 11665.0], [808.0, 4274.0], [810.0, 16193.0], [812.0, 12081.0], [856.0, 23261.0], [834.0, 4460.5], [836.0, 6329.833333333334], [838.0, 20912.0], [844.0, 7295.142857142857], [842.0, 15756.0], [840.0, 4573.0], [846.0, 19952.0], [832.0, 18984.5], [860.0, 20077.0], [858.0, 13628.0], [862.0, 12208.0], [848.0, 29197.0], [850.0, 3544.0], [854.0, 14421.0], [852.0, 20522.0], [866.0, 7549.111111111111], [864.0, 7962.6], [868.0, 10153.666666666666], [872.0, 5733.888888888889], [874.0, 5361.0], [876.0, 3936.0], [880.0, 18483.75], [882.0, 12205.0], [894.0, 8859.0], [892.0, 5018.666666666667], [888.0, 17394.0], [884.0, 26911.0], [886.0, 6530.5], [910.0, 9317.0], [900.0, 6418.5], [920.0, 12658.0], [906.0, 21526.0], [904.0, 10215.0], [908.0, 6694.0], [898.0, 28363.0], [896.0, 30215.0], [924.0, 4089.0], [922.0, 4474.0], [918.0, 15521.0], [916.0, 10197.0], [912.0, 15205.0], [926.0, 22650.0], [942.0, 7624.5], [934.0, 16420.0], [932.0, 10981.0], [930.0, 11075.0], [954.0, 7219.666666666666], [956.0, 15410.0], [936.0, 4593.5], [938.0, 6722.714285714285], [940.0, 3275.0], [928.0, 17801.0], [944.0, 5438.0], [946.0, 12030.666666666666], [948.0, 6505.5], [950.0, 3321.0], [966.0, 8825.0], [962.0, 11375.0], [960.0, 13073.5], [964.0, 4990.999999999999], [984.0, 12087.0], [986.0, 12864.0], [988.0, 4720.0], [990.0, 9795.5], [970.0, 10170.333333333332], [968.0, 18976.0], [974.0, 8072.125], [976.0, 9044.8], [978.0, 23447.0], [980.0, 3465.0], [982.0, 10791.0], [998.0, 4104.5], [992.0, 7313.2], [994.0, 18812.0], [996.0, 11169.0], [1008.0, 11419.5], [1020.0, 9540.0], [1022.0, 12978.5], [1018.0, 6795.0], [1016.0, 7342.0], [1010.0, 15749.666666666668], [1012.0, 9475.75], [1014.0, 12311.0], [1000.0, 13345.0], [1002.0, 13358.0], [1004.0, 10033.0], [1006.0, 11655.0], [1024.0, 6511.0], [1032.0, 10690.166666666666], [1052.0, 11368.666666666666], [1048.0, 8711.5], [1044.0, 10325.333333333334], [1040.0, 24978.0], [1028.0, 23316.5], [1072.0, 19070.0], [1084.0, 18421.0], [1080.0, 6815.0], [1060.0, 3417.0], [1068.0, 8384.5], [1064.0, 9582.0], [1100.0, 9057.75], [1088.0, 4317.0], [1092.0, 13025.0], [1096.0, 4832.0], [1140.0, 6745.5], [1148.0, 7474.333333333334], [1120.0, 8222.0], [1136.0, 8946.5], [1124.0, 7516.5], [1132.0, 13413.5], [1104.0, 8842.333333333334], [1108.0, 6560.5], [1112.0, 17283.0], [1116.0, 19392.0], [1156.0, 8207.6], [1200.0, 10655.0], [1152.0, 19322.0], [1180.0, 4968.666666666667], [1176.0, 5177.0], [1168.0, 7671.0], [1160.0, 11211.0], [1164.0, 11023.666666666668], [1204.0, 8927.42857142857], [1208.0, 14125.0], [1212.0, 8986.5], [1188.0, 11860.0], [1184.0, 14591.0], [1192.0, 7451.666666666667], [1196.0, 5864.0], [1228.0, 10856.0], [1220.0, 6355.222222222223], [1244.0, 6723.0], [1216.0, 19039.0], [1264.0, 14528.5], [1224.0, 11032.0], [1268.0, 12299.0], [1272.0, 18320.333333333332], [1276.0, 11265.5], [1252.0, 8202.0], [1256.0, 9904.5], [1232.0, 7911.0], [1236.0, 7294.625], [1240.0, 12891.0], [1328.0, 6705.333333333333], [1288.0, 11965.0], [1284.0, 10762.0], [1292.0, 15665.0], [1308.0, 9945.4], [1280.0, 4779.0], [1332.0, 8708.5], [1336.0, 11307.0], [1340.0, 8593.666666666666], [1320.0, 8020.25], [1316.0, 28565.0], [1312.0, 13010.0], [1304.0, 12016.75], [1300.0, 22648.0], [1296.0, 7539.0], [1344.0, 16560.0], [1372.0, 8087.833333333333], [1368.0, 16876.5], [1360.0, 12719.5], [1364.0, 23296.0], [1348.0, 3079.0], [1352.0, 23008.0], [1356.0, 16759.0], [1376.0, 11745.0], [1404.0, 9736.75], [1400.0, 11688.5], [1392.0, 7112.333333333334], [1396.0, 17569.0], [1380.0, 8567.5], [1384.0, 24781.0], [1388.0, 9847.5], [1412.0, 20010.0], [1416.0, 17646.0], [1436.0, 8619.75], [1428.0, 9248.29411764706], [1432.0, 3211.0], [1424.0, 6930.5], [1420.0, 19956.0], [1456.0, 18719.0], [1448.0, 8324.5], [1444.0, 5716.0], [1440.0, 9110.0], [1452.0, 18809.0], [1468.0, 8124.5], [1464.0, 15016.0], [1460.0, 9075.0], [1484.0, 4613.0], [1524.0, 7242.428571428572], [1476.0, 5424.75], [1472.0, 11665.0], [1480.0, 7829.0], [1520.0, 18751.5], [1504.0, 3080.0], [1532.0, 6522.0], [1528.0, 12724.0], [1512.0, 18303.0], [1508.0, 14705.5], [1516.0, 12173.0], [1488.0, 10406.75], [1492.0, 6376.333333333333], [1496.0, 7127.666666666667], [1500.0, 12398.0], [1544.0, 5207.0], [1536.0, 10829.666666666666], [1548.0, 17538.0], [1540.0, 11454.0], [1552.0, 9454.0], [1560.0, 7135.666666666667], [1564.0, 13639.0], [1568.0, 9148.833333333334], [1580.0, 12061.0], [1576.0, 12925.0], [1588.0, 8831.333333333334], [1592.0, 9619.0], [1596.0, 16304.0], [1612.0, 11274.333333333334], [1600.0, 8692.5], [1604.0, 11655.6], [1608.0, 15325.0], [1648.0, 3580.5], [1652.0, 6510.333333333333], [1656.0, 12042.5], [1660.0, 4713.0], [1616.0, 14435.333333333334], [1620.0, 6707.0], [1628.0, 15133.0], [1632.0, 8165.0], [1636.0, 5045.0], [1640.0, 12879.0], [1644.0, 3610.0], [1676.0, 13742.0], [1664.0, 9629.777777777777], [1668.0, 9518.75], [1672.0, 10358.900000000001], [1712.0, 16440.0], [1716.0, 12295.5], [1720.0, 10738.0], [1724.0, 9780.5], [1696.0, 10969.666666666666], [1688.0, 8960.0], [1684.0, 7996.0], [1680.0, 10631.5], [1692.0, 14837.5], [1700.0, 12724.125], [1704.0, 11180.0], [1708.0, 11789.23076923077], [1740.0, 13693.4], [1732.0, 10602.25], [1728.0, 10878.0], [1736.0, 9416.5], [1776.0, 13459.0], [1760.0, 13655.0], [1788.0, 8384.6], [1784.0, 7492.0], [1744.0, 13643.5], [1748.0, 8122.0], [1756.0, 7092.0], [1752.0, 10627.0], [1768.0, 19243.0], [1764.0, 13957.333333333334], [1792.0, 11046.0], [1800.0, 8866.555555555555], [1820.0, 10613.0], [1816.0, 17837.0], [1796.0, 10228.076923076924], [1804.0, 12966.0], [1808.0, 16649.5], [1812.0, 18755.0], [1824.0, 9983.333333333334], [1848.0, 8086.25], [1840.0, 10560.8], [1844.0, 8595.75], [1828.0, 8732.111111111111], [1832.0, 15037.5], [1836.0, 12461.0], [1868.0, 11212.888888888889], [1908.0, 12425.5], [1856.0, 18489.333333333332], [1860.0, 10107.75], [1864.0, 12840.5], [1904.0, 7296.0], [1912.0, 13742.0], [1916.0, 13543.0], [1888.0, 10324.6], [1892.0, 7734.0], [1896.0, 6386.0], [1900.0, 9544.6], [1872.0, 11872.0], [1876.0, 13694.0], [1880.0, 12441.666666666666], [1884.0, 12078.5], [1932.0, 8063.571428571428], [1968.0, 14107.666666666666], [1924.0, 12539.0], [1920.0, 13153.0], [1928.0, 16803.0], [1972.0, 14238.75], [1976.0, 9861.333333333334], [1952.0, 11410.0], [1980.0, 15051.0], [1956.0, 10963.333333333334], [1960.0, 10010.6], [1964.0, 8780.818181818182], [1940.0, 15083.0], [1936.0, 7307.0], [1944.0, 12067.0], [1948.0, 14608.42857142857], [1988.0, 4615.428571428572], [1984.0, 7576.666666666667], [1992.0, 9462.699999999999], [1996.0, 7446.0], [2000.0, 9906.69090909091], [1025.0, 6114.333333333333], [1053.0, 8793.333333333334], [1045.0, 5178.5], [1049.0, 9522.0], [1041.0, 5409.333333333333], [1033.0, 9969.5], [1029.0, 13460.0], [1037.0, 9214.0], [1057.0, 6948.833333333333], [1073.0, 21183.0], [1061.0, 11859.0], [1065.0, 9441.0], [1069.0, 4157.5], [1141.0, 11209.0], [1121.0, 7726.875], [1149.0, 8781.0], [1145.0, 17299.5], [1137.0, 9481.833333333334], [1101.0, 16669.0], [1097.0, 10657.0], [1093.0, 11964.0], [1125.0, 7106.5], [1129.0, 9439.333333333332], [1117.0, 6815.5], [1113.0, 14103.0], [1109.0, 19712.0], [1105.0, 15522.0], [1181.0, 10853.4], [1169.0, 7599.6], [1173.0, 22139.0], [1177.0, 19957.0], [1157.0, 9955.75], [1153.0, 10547.0], [1165.0, 8766.5], [1201.0, 9338.0], [1205.0, 8586.0], [1209.0, 8048.0], [1185.0, 7137.5], [1189.0, 12282.0], [1193.0, 8843.0], [1197.0, 9186.0], [1225.0, 18323.0], [1221.0, 10082.666666666668], [1229.0, 11961.0], [1217.0, 8594.0], [1237.0, 9563.0], [1245.0, 13325.0], [1265.0, 21211.0], [1269.0, 6653.5], [1273.0, 9785.857142857143], [1253.0, 30719.0], [1249.0, 9180.5], [1277.0, 25378.0], [1261.0, 6769.333333333333], [1233.0, 10764.333333333334], [1241.0, 8048.5], [1329.0, 14310.0], [1337.0, 6323.333333333333], [1285.0, 15170.0], [1309.0, 7835.5], [1281.0, 16355.0], [1289.0, 17471.0], [1293.0, 25738.0], [1333.0, 13283.0], [1341.0, 14678.5], [1313.0, 9395.833333333332], [1321.0, 4262.0], [1317.0, 15183.0], [1297.0, 20290.0], [1301.0, 7234.0], [1305.0, 5923.0], [1345.0, 8306.5], [1349.0, 5465.333333333333], [1373.0, 8424.4], [1369.0, 9955.25], [1365.0, 25054.0], [1361.0, 13874.5], [1353.0, 9115.25], [1357.0, 10722.75], [1377.0, 7630.2], [1385.0, 14583.0], [1381.0, 11874.0], [1405.0, 10197.333333333334], [1401.0, 5732.0], [1393.0, 11974.0], [1397.0, 10733.0], [1389.0, 12052.0], [1437.0, 8797.0], [1433.0, 11402.0], [1429.0, 9779.0], [1425.0, 9893.0], [1409.0, 22986.5], [1413.0, 8352.8], [1417.0, 10241.0], [1421.0, 12898.0], [1457.0, 3426.0], [1445.0, 4701.0], [1441.0, 12927.0], [1469.0, 11166.0], [1465.0, 12451.0], [1461.0, 18403.0], [1449.0, 11772.0], [1453.0, 19103.0], [1521.0, 8538.0], [1525.0, 8990.5], [1477.0, 8861.363636363638], [1473.0, 12255.0], [1485.0, 14223.0], [1481.0, 20078.0], [1529.0, 7949.333333333333], [1505.0, 11598.0], [1533.0, 11759.0], [1513.0, 11780.0], [1509.0, 6135.0], [1517.0, 15133.666666666666], [1501.0, 3334.0], [1497.0, 9538.0], [1493.0, 11668.0], [1489.0, 5972.0], [1541.0, 11370.6], [1537.0, 9027.923076923076], [1549.0, 9791.6], [1545.0, 13530.0], [1585.0, 18083.0], [1589.0, 14819.0], [1597.0, 14867.0], [1553.0, 11544.5], [1557.0, 14258.0], [1561.0, 7328.0], [1569.0, 10405.5], [1573.0, 9206.5], [1577.0, 10078.0], [1581.0, 9645.000000000002], [1605.0, 11094.0], [1613.0, 11830.666666666666], [1601.0, 10189.8], [1609.0, 12623.25], [1617.0, 10075.5], [1621.0, 4326.0], [1625.0, 9521.0], [1629.0, 11965.0], [1637.0, 9197.666666666666], [1641.0, 4293.0], [1633.0, 14764.0], [1657.0, 11465.0], [1661.0, 9450.2], [1645.0, 10449.6], [1649.0, 19265.0], [1653.0, 16173.5], [1665.0, 14399.0], [1673.0, 10543.833333333334], [1677.0, 15597.0], [1685.0, 7984.0], [1681.0, 23104.0], [1689.0, 14662.333333333334], [1669.0, 17504.0], [1693.0, 15275.0], [1697.0, 12294.375], [1705.0, 6717.5], [1701.0, 5584.0], [1709.0, 14343.0], [1721.0, 10835.0], [1717.0, 12813.0], [1725.0, 12304.0], [1729.0, 5628.0], [1737.0, 13164.5], [1741.0, 18452.0], [1777.0, 16058.0], [1781.0, 14066.333333333332], [1785.0, 15534.666666666666], [1745.0, 8980.666666666666], [1749.0, 14437.2], [1753.0, 14511.333333333332], [1733.0, 4352.0], [1757.0, 9191.5], [1761.0, 8095.25], [1769.0, 12571.5], [1773.0, 10333.333333333334], [1801.0, 8014.0], [1845.0, 6527.0], [1825.0, 11448.333333333334], [1793.0, 11371.0], [1805.0, 15413.333333333334], [1797.0, 9009.75], [1841.0, 10074.5], [1809.0, 11160.0], [1813.0, 8323.0], [1817.0, 10417.0], [1829.0, 3265.0], [1837.0, 10636.666666666666], [1833.0, 23051.0], [1849.0, 8550.5], [1853.0, 12324.25], [1905.0, 8656.5], [1857.0, 10949.8], [1865.0, 11893.75], [1869.0, 9460.0], [1909.0, 12053.2], [1913.0, 11219.124999999998], [1889.0, 15481.5], [1917.0, 9812.0], [1901.0, 4661.0], [1897.0, 11976.0], [1893.0, 11557.4], [1873.0, 13788.0], [1877.0, 13693.2], [1881.0, 15568.5], [1885.0, 10952.333333333334], [1969.0, 13240.833333333332], [1953.0, 11139.2], [1921.0, 12325.111111111111], [1925.0, 14196.25], [1949.0, 10008.5], [1945.0, 4900.0], [1941.0, 13682.0], [1929.0, 7639.333333333333], [1933.0, 13226.0], [1973.0, 10786.8], [1977.0, 9305.4], [1981.0, 16498.0], [1937.0, 8858.857142857143], [1957.0, 11435.0], [1961.0, 15192.8], [1965.0, 8997.8], [1989.0, 10586.09523809524], [1997.0, 9486.375], [1993.0, 10274.642857142859], [1985.0, 8292.5], [519.0, 12080.0], [513.0, 6801.0], [525.0, 11444.0], [527.0, 30392.0], [517.0, 5814.25], [515.0, 31665.0], [529.0, 6722.5], [543.0, 4771.4], [539.0, 8414.5], [537.0, 16897.0], [541.0, 17254.0], [533.0, 9133.25], [535.0, 6556.0], [521.0, 7613.833333333333], [523.0, 5020.25], [547.0, 6071.571428571428], [545.0, 14142.0], [557.0, 3875.454545454545], [559.0, 7590.0], [569.0, 3622.4444444444443], [551.0, 26970.0], [549.0, 14368.0], [571.0, 5094.666666666667], [575.0, 5955.5], [573.0, 21513.0], [561.0, 9293.0], [563.0, 18961.0], [565.0, 16041.5], [567.0, 7575.333333333333], [553.0, 5029.0], [555.0, 3298.5], [605.0, 3108.277777777778], [583.0, 4192.0], [581.0, 11239.0], [579.0, 10253.0], [577.0, 3655.5], [589.0, 8380.0], [591.0, 4696.5], [607.0, 4027.666666666667], [603.0, 7675.5], [601.0, 30035.0], [593.0, 5437.6], [595.0, 3391.5294117647063], [599.0, 6742.75], [585.0, 9713.0], [587.0, 2700.3333333333335], [635.0, 10969.0], [611.0, 8501.0], [621.0, 13720.125], [617.0, 16520.0], [623.0, 29282.0], [609.0, 14684.0], [627.0, 6060.0], [633.0, 10077.5], [615.0, 25518.0], [613.0, 6584.0], [639.0, 8081.0], [637.0, 26590.0], [629.0, 22130.0], [625.0, 9369.0], [647.0, 13375.4], [641.0, 3957.2], [643.0, 17903.0], [665.0, 5816.0], [667.0, 13372.0], [669.0, 5144.5], [671.0, 2531.5], [649.0, 7236.0], [651.0, 14476.333333333334], [655.0, 11007.0], [653.0, 19113.0], [657.0, 3282.0], [659.0, 12360.666666666666], [661.0, 9380.5], [663.0, 7103.2], [699.0, 3200.5], [673.0, 6602.5], [675.0, 6779.75], [679.0, 18912.0], [677.0, 17121.0], [681.0, 2577.0], [683.0, 3591.5], [687.0, 20730.0], [703.0, 7877.25], [701.0, 6734.75], [693.0, 9268.5], [689.0, 13238.5], [695.0, 14147.0], [733.0, 3907.714285714286], [715.0, 5955.0], [735.0, 5494.666666666667], [721.0, 21202.0], [729.0, 4491.285714285715], [731.0, 23534.0], [723.0, 7994.0], [727.0, 9512.0], [725.0, 20691.0], [713.0, 7959.333333333333], [719.0, 2757.0], [711.0, 16500.0], [709.0, 15745.0], [707.0, 12309.0], [705.0, 14821.0], [717.0, 20824.0], [765.0, 14240.0], [749.0, 3825.0], [737.0, 14979.666666666666], [743.0, 6910.0], [741.0, 16773.0], [751.0, 13033.0], [747.0, 17879.333333333332], [745.0, 12377.0], [767.0, 9459.5], [755.0, 22049.0], [753.0, 16134.0], [763.0, 16711.0], [761.0, 23553.0], [759.0, 10802.5], [757.0, 4535.0], [799.0, 5354.333333333333], [769.0, 16374.0], [771.0, 5684.333333333334], [773.0, 6029.666666666667], [793.0, 9865.0], [775.0, 9530.0], [797.0, 18868.0], [795.0, 18831.0], [785.0, 5664.0], [787.0, 6499.5], [789.0, 3527.0], [791.0, 7556.5], [781.0, 10733.666666666668], [779.0, 18493.0], [777.0, 9717.0], [783.0, 20981.5], [827.0, 7164.5], [801.0, 8398.666666666668], [815.0, 3452.0], [803.0, 11244.333333333332], [805.0, 4558.0], [825.0, 14087.0], [807.0, 8488.0], [817.0, 7766.7], [829.0, 9179.75], [819.0, 9148.0], [821.0, 8638.0], [823.0, 4616.0], [809.0, 8404.666666666666], [811.0, 6190.333333333333], [857.0, 10180.5], [837.0, 13455.0], [839.0, 17606.0], [835.0, 8760.666666666666], [847.0, 11342.666666666668], [833.0, 8563.0], [843.0, 14259.0], [841.0, 30051.0], [849.0, 10815.333333333332], [851.0, 14395.0], [861.0, 3734.0], [863.0, 14609.0], [853.0, 8686.5], [855.0, 16503.0], [867.0, 18928.0], [891.0, 14461.5], [865.0, 6311.0], [873.0, 11702.0], [875.0, 12980.0], [877.0, 5237.666666666667], [879.0, 3788.6666666666665], [881.0, 9812.8], [895.0, 7204.166666666667], [893.0, 20141.0], [889.0, 3442.0], [869.0, 12161.0], [883.0, 7462.0], [885.0, 5737.5], [887.0, 8950.5], [911.0, 8558.0], [921.0, 8189.0], [901.0, 9107.666666666666], [903.0, 22485.5], [907.0, 11728.666666666666], [905.0, 10496.0], [909.0, 5714.0], [899.0, 6408.0], [897.0, 19413.0], [923.0, 6599.0], [925.0, 11274.0], [927.0, 25879.0], [919.0, 7119.0], [915.0, 31017.5], [913.0, 23805.0], [935.0, 3963.5], [955.0, 8525.666666666668], [929.0, 9465.0], [933.0, 19250.0], [931.0, 21340.0], [953.0, 6794.8], [959.0, 10288.333333333332], [957.0, 23008.0], [937.0, 11394.6], [939.0, 12070.0], [941.0, 16230.0], [943.0, 5234.0], [945.0, 11431.0], [947.0, 6343.5], [949.0, 4602.0], [951.0, 10108.833333333334], [967.0, 7896.2], [961.0, 13232.0], [963.0, 11467.0], [965.0, 18465.5], [985.0, 9471.5], [987.0, 6068.0], [991.0, 19864.0], [989.0, 10752.0], [969.0, 20008.0], [971.0, 17395.0], [973.0, 5211.0], [975.0, 13940.0], [977.0, 6058.2], [979.0, 26815.0], [981.0, 7919.6], [983.0, 9671.0], [997.0, 9774.25], [1005.0, 12674.0], [993.0, 16795.0], [995.0, 8398.666666666668], [1021.0, 10134.0], [1023.0, 8267.0], [1019.0, 11095.8], [999.0, 13458.0], [1017.0, 12050.0], [1009.0, 8364.833333333334], [1011.0, 9623.0], [1013.0, 15355.0], [1015.0, 8045.333333333333], [1001.0, 7902.333333333334], [1003.0, 10761.333333333334], [1026.0, 4381.0], [1054.0, 11392.333333333334], [1046.0, 13291.25], [1042.0, 11814.0], [1030.0, 6526.6], [1038.0, 7049.0], [1034.0, 14929.0], [1078.0, 13953.0], [1086.0, 13201.666666666666], [1058.0, 10930.0], [1082.0, 21712.5], [1062.0, 9826.0], [1070.0, 11655.5], [1098.0, 16223.0], [1114.0, 9116.8], [1090.0, 7604.0], [1094.0, 13464.0], [1142.0, 7322.0], [1150.0, 8778.0], [1122.0, 13366.0], [1138.0, 11900.4], [1126.0, 19815.666666666668], [1130.0, 4705.0], [1134.0, 6930.666666666667], [1106.0, 7738.666666666667], [1110.0, 8462.0], [1118.0, 4225.0], [1158.0, 9141.0], [1154.0, 5775.333333333333], [1182.0, 4392.666666666667], [1178.0, 7718.4], [1174.0, 12617.0], [1170.0, 13279.0], [1162.0, 4869.0], [1166.0, 25290.0], [1206.0, 8425.0], [1210.0, 10984.0], [1214.0, 8827.0], [1190.0, 11624.333333333334], [1194.0, 13829.0], [1198.0, 7364.666666666666], [1230.0, 13793.0], [1246.0, 3408.0], [1218.0, 19077.0], [1266.0, 8818.333333333332], [1222.0, 7381.0], [1270.0, 7794.2], [1274.0, 4742.0], [1278.0, 29063.0], [1250.0, 10247.0], [1254.0, 16112.0], [1258.0, 8851.0], [1234.0, 26725.0], [1242.0, 9959.0], [1238.0, 16291.0], [1330.0, 7743.666666666667], [1290.0, 9118.2], [1286.0, 10311.0], [1294.0, 11886.0], [1310.0, 20864.0], [1282.0, 8337.5], [1334.0, 7410.6], [1338.0, 12137.5], [1342.0, 14361.5], [1318.0, 4922.0], [1314.0, 14361.0], [1322.0, 15961.0], [1326.0, 12151.8], [1302.0, 10293.0], [1298.0, 11970.0], [1350.0, 7190.0], [1370.0, 9382.5], [1366.0, 8040.25], [1362.0, 9998.0], [1374.0, 6845.0], [1354.0, 8262.57142857143], [1358.0, 10454.0], [1406.0, 5328.666666666667], [1378.0, 14622.0], [1402.0, 10945.5], [1394.0, 4153.0], [1398.0, 6375.0], [1382.0, 10475.4], [1386.0, 8592.25], [1390.0, 12008.0], [1410.0, 8930.0], [1414.0, 8538.0], [1438.0, 13044.0], [1430.0, 3212.0], [1434.0, 7153.285714285714], [1426.0, 6849.75], [1418.0, 9254.285714285714], [1422.0, 8667.285714285714], [1458.0, 8710.333333333332], [1450.0, 6569.5], [1446.0, 29412.0], [1454.0, 19007.0], [1462.0, 11709.0], [1486.0, 8628.0], [1474.0, 17342.0], [1478.0, 20092.0], [1482.0, 12909.0], [1522.0, 10761.0], [1534.0, 6239.0], [1530.0, 4483.0], [1526.0, 8517.5], [1506.0, 10006.75], [1514.0, 5250.0], [1510.0, 18213.0], [1518.0, 5550.0], [1494.0, 12440.0], [1498.0, 11550.0], [1502.0, 10316.0], [1546.0, 13291.0], [1538.0, 6843.5], [1550.0, 9467.4], [1542.0, 5220.0], [1586.0, 13281.0], [1554.0, 13759.25], [1562.0, 9624.699999999999], [1582.0, 9522.75], [1578.0, 15097.0], [1574.0, 11732.666666666666], [1570.0, 10223.0], [1590.0, 7090.0], [1594.0, 6482.0], [1598.0, 15418.0], [1614.0, 9257.0], [1650.0, 6524.0], [1606.0, 16003.25], [1602.0, 10119.0], [1610.0, 7675.75], [1654.0, 12800.0], [1658.0, 4747.5], [1662.0, 17986.0], [1618.0, 14303.0], [1622.0, 8344.25], [1626.0, 13130.0], [1630.0, 11517.75], [1634.0, 11469.75], [1638.0, 12908.0], [1642.0, 4455.0], [1646.0, 13397.0], [1678.0, 14882.5], [1666.0, 7892.0], [1670.0, 10904.0], [1674.0, 12152.5], [1714.0, 15001.0], [1718.0, 12220.428571428572], [1722.0, 9355.5], [1726.0, 12282.0], [1686.0, 25154.0], [1682.0, 10564.0], [1690.0, 17823.0], [1694.0, 4448.666666666667], [1702.0, 9286.4], [1706.0, 14103.0], [1710.0, 7914.0], [1742.0, 16578.5], [1734.0, 11506.285714285714], [1730.0, 15368.0], [1738.0, 11993.0], [1778.0, 12563.25], [1790.0, 4987.0], [1786.0, 7201.666666666667], [1782.0, 6937.0], [1746.0, 14653.0], [1750.0, 12045.5], [1758.0, 14251.0], [1754.0, 12175.666666666666], [1762.0, 13738.0], [1770.0, 9704.0], [1766.0, 14491.5], [1774.0, 6843.333333333333], [1802.0, 8644.0], [1794.0, 12569.5], [1818.0, 13369.25], [1798.0, 12393.0], [1806.0, 8100.0], [1810.0, 15941.0], [1814.0, 8270.5], [1854.0, 7135.75], [1850.0, 14503.0], [1846.0, 12207.42857142857], [1842.0, 8548.666666666666], [1826.0, 9055.0], [1830.0, 12870.0], [1834.0, 11359.090909090908], [1838.0, 9155.666666666666], [1870.0, 3917.0], [1862.0, 10885.666666666668], [1858.0, 18819.0], [1866.0, 15965.0], [1906.0, 17357.0], [1910.0, 15451.666666666668], [1914.0, 12937.142857142857], [1918.0, 12493.166666666668], [1890.0, 8953.857142857143], [1894.0, 7948.666666666666], [1898.0, 9380.833333333332], [1902.0, 4685.0], [1874.0, 11223.2], [1878.0, 11383.833333333334], [1882.0, 13085.5], [1886.0, 10826.5], [1930.0, 15167.5], [1926.0, 8456.166666666666], [1922.0, 14375.666666666668], [1950.0, 13282.0], [1934.0, 12073.666666666666], [1970.0, 11754.444444444445], [1974.0, 10524.142857142857], [1978.0, 11365.333333333334], [1982.0, 8371.0], [1954.0, 10394.714285714284], [1958.0, 11771.6], [1962.0, 8540.666666666666], [1966.0, 12098.875], [1938.0, 6597.666666666667], [1942.0, 11753.142857142859], [1946.0, 6968.166666666667], [1990.0, 10904.142857142857], [1994.0, 9791.500000000002], [1998.0, 12731.09090909091], [1986.0, 5154.5], [1031.0, 7032.0], [1027.0, 7146.0], [1051.0, 12677.5], [1055.0, 14974.0], [1035.0, 13397.0], [1039.0, 7856.0], [1087.0, 11713.0], [1083.0, 4333.0], [1075.0, 6450.5], [1059.0, 6641.166666666667], [1063.0, 9753.0], [1067.0, 15687.5], [1071.0, 5972.0], [1139.0, 5273.0], [1151.0, 13353.0], [1091.0, 9893.538461538463], [1123.0, 15885.0], [1147.0, 12353.0], [1143.0, 10478.0], [1103.0, 10483.0], [1099.0, 21811.0], [1095.0, 13397.0], [1127.0, 30018.0], [1135.0, 10643.0], [1111.0, 3678.0], [1107.0, 11905.0], [1159.0, 7289.6], [1183.0, 13754.333333333334], [1179.0, 13389.666666666666], [1171.0, 19113.0], [1175.0, 12817.0], [1155.0, 19179.5], [1163.0, 7716.666666666667], [1203.0, 9960.0], [1167.0, 8718.0], [1215.0, 6880.25], [1211.0, 19118.0], [1207.0, 10066.0], [1191.0, 11882.0], [1187.0, 13027.5], [1195.0, 9664.0], [1199.0, 19031.0], [1267.0, 11142.0], [1231.0, 6134.0], [1227.0, 11229.5], [1223.0, 18376.0], [1247.0, 13029.0], [1275.0, 8729.5], [1255.0, 11955.0], [1251.0, 8641.0], [1259.0, 15439.0], [1279.0, 18609.0], [1263.0, 6516.0], [1235.0, 4113.0], [1239.0, 15534.0], [1291.0, 9085.4], [1311.0, 9069.0], [1283.0, 12761.0], [1287.0, 6673.75], [1331.0, 5057.5], [1335.0, 12914.0], [1339.0, 7855.333333333333], [1343.0, 7931.5], [1319.0, 18335.0], [1315.0, 3558.0], [1323.0, 8730.2], [1327.0, 10771.0], [1299.0, 12050.0], [1303.0, 17909.0], [1307.0, 7762.299999999999], [1351.0, 10757.0], [1371.0, 17938.5], [1347.0, 11739.5], [1375.0, 9361.0], [1367.0, 6385.6], [1363.0, 7972.666666666667], [1355.0, 12687.8], [1359.0, 8603.0], [1383.0, 12077.0], [1407.0, 4715.0], [1403.0, 14136.0], [1395.0, 6754.0], [1399.0, 9560.0], [1387.0, 7656.333333333333], [1391.0, 9105.666666666666], [1411.0, 16229.5], [1415.0, 10098.833333333334], [1435.0, 11126.0], [1431.0, 16300.0], [1427.0, 17889.0], [1439.0, 14440.0], [1419.0, 9410.0], [1423.0, 7381.0], [1447.0, 6559.142857142858], [1443.0, 10501.5], [1471.0, 16230.0], [1467.0, 7141.0], [1463.0, 9656.666666666666], [1459.0, 9519.0], [1455.0, 8244.8], [1451.0, 17450.0], [1527.0, 5963.333333333333], [1475.0, 8205.0], [1523.0, 11643.333333333334], [1487.0, 20008.0], [1483.0, 20063.0], [1479.0, 22488.0], [1531.0, 12656.75], [1535.0, 7023.0], [1507.0, 8725.380952380952], [1515.0, 4180.0], [1511.0, 11781.0], [1519.0, 12262.666666666666], [1503.0, 12712.4], [1499.0, 15572.0], [1491.0, 6916.333333333334], [1547.0, 13392.0], [1587.0, 7972.75], [1559.0, 7448.0], [1539.0, 18957.0], [1543.0, 13303.0], [1551.0, 15324.0], [1595.0, 12486.0], [1591.0, 8258.0], [1599.0, 15411.0], [1555.0, 6119.5], [1567.0, 14605.333333333334], [1571.0, 9167.0], [1575.0, 10522.2], [1579.0, 12627.333333333334], [1583.0, 9572.5], [1607.0, 13641.0], [1611.0, 13548.0], [1619.0, 11952.0], [1623.0, 14242.0], [1627.0, 22508.0], [1631.0, 12230.0], [1639.0, 6767.0], [1663.0, 17964.0], [1635.0, 4495.0], [1659.0, 13442.0], [1643.0, 9295.75], [1647.0, 3575.0], [1651.0, 6186.5], [1615.0, 7621.0], [1655.0, 12570.5], [1675.0, 11870.25], [1715.0, 9884.333333333334], [1671.0, 11655.333333333334], [1679.0, 12297.0], [1687.0, 4687.0], [1691.0, 10435.333333333334], [1695.0, 8724.0], [1667.0, 28201.0], [1703.0, 11287.666666666668], [1699.0, 8294.0], [1707.0, 10283.4], [1711.0, 15679.0], [1723.0, 10197.25], [1719.0, 12338.0], [1727.0, 17545.0], [1739.0, 8584.5], [1735.0, 10974.5], [1743.0, 19179.0], [1779.0, 11690.6], [1783.0, 13168.5], [1791.0, 9469.5], [1787.0, 11031.75], [1747.0, 12672.0], [1751.0, 23980.0], [1759.0, 15601.0], [1731.0, 6709.0], [1755.0, 10656.666666666666], [1767.0, 10047.8], [1763.0, 15554.0], [1775.0, 16132.0], [1803.0, 7735.0], [1807.0, 10335.222222222223], [1795.0, 16131.0], [1843.0, 8181.0], [1811.0, 12294.0], [1815.0, 10547.25], [1823.0, 15194.75], [1819.0, 6015.0], [1827.0, 11188.0], [1831.0, 7372.8], [1835.0, 6848.0], [1839.0, 10129.0], [1847.0, 6949.0], [1851.0, 9927.5], [1855.0, 12577.0], [1867.0, 15615.0], [1871.0, 8400.444444444445], [1859.0, 10296.666666666668], [1887.0, 11443.0], [1863.0, 8903.75], [1891.0, 10129.923076923076], [1907.0, 8391.0], [1911.0, 9945.666666666668], [1919.0, 11038.666666666666], [1915.0, 11252.0], [1903.0, 7122.0], [1899.0, 4237.0], [1895.0, 16514.5], [1875.0, 12859.2], [1879.0, 12492.5], [1883.0, 16100.0], [1931.0, 12922.0], [1927.0, 11258.666666666668], [1923.0, 13732.0], [1951.0, 11279.75], [1947.0, 19585.0], [1943.0, 13833.5], [1935.0, 6083.0], [1975.0, 13320.0], [1971.0, 8879.666666666666], [1979.0, 9701.57142857143], [1983.0, 7418.5], [1939.0, 6898.666666666667], [1955.0, 9798.222222222223], [1959.0, 10901.833333333334], [1963.0, 12417.5], [1967.0, 7725.833333333334], [1987.0, 10157.0], [1995.0, 10357.51612903226], [1999.0, 12749.583333333332], [1991.0, 9953.6], [1.0, 138822.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1117.6161340607941, 11215.092751364024]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.60319196E12, "maxY": 428249.31666666665, "series": [{"data": [[1.60319196E12, 8191.5], [1.60319214E12, 1541.0166666666667], [1.60319208E12, 1508.6333333333334], [1.60319202E12, 428249.31666666665]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60319196E12, 180.6], [1.60319214E12, 0.0], [1.60319208E12, 29.4], [1.60319202E12, 8687.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60319214E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 532.627906976744, "minX": 1.60319196E12, "maxY": 138703.83870967745, "series": [{"data": [[1.60319196E12, 532.627906976744], [1.60319214E12, 138703.83870967745], [1.60319208E12, 53658.0], [1.60319202E12, 10455.150490294169]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60319214E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 524.3720930232558, "minX": 1.60319196E12, "maxY": 11368.06451612903, "series": [{"data": [[1.60319196E12, 524.3720930232558], [1.60319214E12, 11368.06451612903], [1.60319208E12, 8151.555555555555], [1.60319202E12, 6491.749449669805]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60319214E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 125.0, "minX": 1.60319196E12, "maxY": 12465.333333333338, "series": [{"data": [[1.60319196E12, 125.0], [1.60319214E12, 2965.7741935483873], [1.60319208E12, 12465.333333333338], [1.60319202E12, 6010.631578947344]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60319214E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 294.0, "minX": 1.60319196E12, "maxY": 61045.0, "series": [{"data": [[1.60319196E12, 1585.0], [1.60319208E12, 61045.0], [1.60319202E12, 52244.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60319196E12, 294.0], [1.60319208E12, 49597.0], [1.60319202E12, 574.4839980268479]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60319196E12, 294.0], [1.60319208E12, 49597.0], [1.60319202E12, 585.9662003946304]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60319196E12, 294.0], [1.60319208E12, 49597.0], [1.60319202E12, 583.6219990134239]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.60319196E12, 294.0], [1.60319208E12, 49597.0], [1.60319202E12, 344.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60319196E12, 457.5], [1.60319208E12, 53765.0], [1.60319202E12, 7331.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60319208E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 382.5, "minX": 1.0, "maxY": 138492.0, "series": [{"data": [[2.0, 54984.0], [3.0, 51518.0], [4.0, 41525.5], [6.0, 29785.0], [7.0, 28215.0], [11.0, 30826.5], [14.0, 29790.0], [26.0, 28858.0], [28.0, 30494.0], [32.0, 382.5], [52.0, 7779.5], [54.0, 620.5], [57.0, 6533.0], [62.0, 5733.5], [65.0, 4558.5], [64.0, 6630.0], [69.0, 1516.0], [71.0, 2179.0], [78.0, 7777.0], [83.0, 2755.0], [80.0, 5979.0], [82.0, 7407.5], [84.0, 3579.0], [91.0, 1696.0], [89.0, 7827.5], [94.0, 4558.0], [92.0, 6889.5], [95.0, 19434.0], [99.0, 4612.0], [100.0, 2997.5], [101.0, 4536.0], [106.0, 7999.5], [105.0, 7159.0], [110.0, 3167.0], [111.0, 7484.5], [113.0, 8650.0], [119.0, 7764.0], [124.0, 8163.0], [132.0, 10808.0], [128.0, 18379.0], [136.0, 9312.0], [137.0, 10761.0], [141.0, 11885.5], [143.0, 17991.0], [144.0, 2464.5], [154.0, 15821.0], [169.0, 17147.5], [192.0, 11713.0], [216.0, 13175.0], [1.0, 53511.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 41773.5], [3.0, 51158.0], [52.0, 13149.5], [65.0, 11611.0], [64.0, 13281.0], [4.0, 49662.5], [78.0, 13450.0], [80.0, 12743.0], [82.0, 14766.0], [89.0, 12408.0], [95.0, 24061.5], [99.0, 12324.5], [6.0, 26968.0], [101.0, 12511.0], [100.0, 13340.0], [106.0, 14201.0], [105.0, 13589.0], [111.0, 12863.0], [113.0, 14890.5], [7.0, 26468.0], [119.0, 13069.5], [124.0, 13747.0], [132.0, 16196.0], [128.0, 17668.0], [136.0, 13662.0], [137.0, 14172.0], [141.0, 17613.0], [143.0, 18280.0], [154.0, 15820.0], [169.0, 16588.0], [11.0, 28270.0], [192.0, 14406.0], [216.0, 16420.0], [14.0, 28877.0], [1.0, 48810.0], [26.0, 26875.0], [28.0, 28612.0], [31.0, 138492.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 216.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 23563.0, "series": [{"data": [[2.0, 9547.0], [3.0, 9513.0], [4.0, 10402.0], [6.0, 23563.0], [7.0, 10979.0], [11.0, 16838.0], [14.0, 10504.0], [26.0, 10651.0], [28.0, 14917.0], [32.0, 379.0], [52.0, 7477.0], [54.0, 600.5], [57.0, 6296.0], [62.0, 5421.0], [65.0, 4543.5], [64.0, 6630.0], [69.0, 1395.0], [71.0, 2163.0], [78.0, 7555.0], [83.0, 2749.0], [80.0, 5948.0], [82.0, 6949.5], [84.0, 3544.0], [91.0, 1660.0], [89.0, 6804.5], [94.0, 4339.5], [92.0, 6792.5], [95.0, 17488.0], [99.0, 4581.0], [100.0, 2920.5], [101.0, 4275.0], [106.0, 7284.5], [105.0, 6557.0], [110.0, 3144.5], [111.0, 7431.0], [113.0, 7489.0], [119.0, 7616.0], [124.0, 7986.0], [132.0, 9777.0], [128.0, 16240.0], [136.0, 7877.0], [137.0, 10097.0], [141.0, 9205.0], [143.0, 13980.0], [144.0, 2391.0], [154.0, 11447.0], [169.0, 11493.5], [192.0, 10489.0], [216.0, 11610.0], [1.0, 7491.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [3.0, 0.0], [52.0, 0.0], [65.0, 0.0], [64.0, 0.0], [4.0, 0.0], [78.0, 0.0], [80.0, 0.0], [82.0, 0.0], [89.0, 0.0], [95.0, 0.0], [99.0, 0.0], [6.0, 0.0], [101.0, 0.0], [100.0, 0.0], [106.0, 0.0], [105.0, 0.0], [111.0, 0.0], [113.0, 0.0], [7.0, 0.0], [119.0, 0.0], [124.0, 0.0], [132.0, 0.0], [128.0, 0.0], [136.0, 0.0], [137.0, 0.0], [141.0, 0.0], [143.0, 0.0], [154.0, 0.0], [169.0, 0.0], [11.0, 0.0], [192.0, 0.0], [216.0, 0.0], [14.0, 0.0], [1.0, 0.0], [26.0, 0.0], [28.0, 0.0], [31.0, 12129.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 216.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.7, "minX": 1.60319196E12, "maxY": 81.83333333333333, "series": [{"data": [[1.60319196E12, 3.7], [1.60319202E12, 81.83333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60319202E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.60319196E12, "maxY": 68.95, "series": [{"data": [[1.60319214E12, 0.5166666666666667], [1.60319208E12, 0.016666666666666666], [1.60319202E12, 0.8333333333333334]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.60319196E12, 1.4333333333333333], [1.60319208E12, 0.23333333333333334], [1.60319202E12, 68.95]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.60319202E12, 2.2333333333333334]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.60319208E12, 0.05], [1.60319202E12, 11.266666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60319214E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.60319196E12, "maxY": 68.95, "series": [{"data": [[1.60319196E12, 1.4333333333333333], [1.60319208E12, 0.23333333333333334], [1.60319202E12, 68.95]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.60319214E12, 0.5166666666666667], [1.60319208E12, 0.06666666666666667], [1.60319202E12, 14.333333333333334]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60319214E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.60319196E12, "maxY": 68.95, "series": [{"data": [[1.60319196E12, 1.4333333333333333], [1.60319208E12, 0.23333333333333334], [1.60319202E12, 68.95]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.60319214E12, 0.5166666666666667], [1.60319208E12, 0.06666666666666667], [1.60319202E12, 14.333333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60319214E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

